<launch>
  <arg name="static_map" default="1"/>
  <arg name="map_file" default="map"/>
  <arg name="map_save_period" default="-1"/>
  <group if="$(arg static_map)">
    <node name="map_server" pkg="map_server" type="map_server" args="$(find omniveyor_mobility)/resources/map/$(arg map_file).yaml" />
    <node pkg="amcl" type="amcl" name="amcl" respawn="false" output="screen">
        <rosparam file="$(find omniveyor_mobility)/param/amcl_params.yaml" command="load" />
        <remap from="amcl_pose" to="map_pose"/>
    </node>
  </group>
  <group unless="$(arg static_map)">
    <include file="$(find omniveyor_mobility)/launch/includes/dynamic_map.launch">
        <arg name="map_file"   value="$(arg map_file)"/>
    </include>
    <group if="$(eval arg('map_save_period')>0)">
        <node name="map_saving_utility" pkg="omniveyor_mobility" type="periodicSaveMap.py">
            <param name="map_save_path" value="$(find omniveyor_mobility)/resources/map/$(arg map_file)"/>
            <param name="map_save_interval" value="map_save_period"/>
        </node>
    </group>
  </group>
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_world" clear_params="true">
    <rosparam command="load" file="$(find omniveyor_mobility)/param/world_pose_ekf.yaml" />
    <remap from="odometry/filtered" to="map_pose/filtered"/>
  </node>
</launch>
