<launch>
    <arg name="map_file" default=""/>
    <arg name="dynamic_map" default="1"/>
    <group if="$(eval len(arg('map_file'))>0)">
      <group if="$(arg dynamic_map)">
        <node pkg="slam_toolbox" type="lifelong_slam_toolbox_node" name="slam_toolbox" output="screen">
            <rosparam command="load" file="$(find omniveyor_mobility)/param/slam_toolbox_params.yaml" />
            <remap from="slam_toolbox/scan" to="scan"/>
            <param name="map_file_name" value="$(find omniveyor_mobility)/resources/maps/$(arg map_file)"/>
            <param name="mode" value="mapping"/>
        </node>
      </group>
      <group unless="$(arg dynamic_map)">
        <node pkg="slam_toolbox" type="lifelong_slam_toolbox_node" name="slam_toolbox" output="screen">
            <rosparam command="load" file="$(find omniveyor_mobility)/param/slam_toolbox_params.yaml" />
            <remap from="slam_toolbox/scan" to="scan"/>
            <param name="map_file_name" value="$(find omniveyor_mobility)/resources/maps/$(arg map_file)"/>
            <param name="mode" value="localization"/>
        </node>
      </group>
    </group>
    <group unless="$(eval len(arg('map_file'))>0)">
      <node pkg="slam_toolbox" type="lifelong_slam_toolbox_node" name="slam_toolbox" output="screen">
        <rosparam command="load" file="$(find omniveyor_mobility)/param/slam_toolbox_params.yaml" />
        <remap from="slam_toolbox/scan" to="scan"/>
        <param name="mode" value="mapping"/>
      </node>
    </group>
    <!--map pose is not published for slam_toolbox until ROS2 versions, so we need to emulate one...-->
    <node pkg="omniveyor_mobility" type="mapPoseFromTFOdom_node" name="tf_map_pose_repub" output="screen">
        <param name="odom_topic" value="odom/filtered"/>
    </node>
</launch>
