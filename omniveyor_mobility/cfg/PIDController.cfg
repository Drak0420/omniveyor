 #!/usr/bin/env python
PACKAGE = "pid_controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("base_frame", str_t, 0, "TF frame name for the base", "base_link")
gen.add("overwrite_global_plan_orientation", bool_t, 0, "Whether to override the heading of the global plan", False)
gen.add("publish_look_ahead_point", bool_t, 0, "Whether to publish the current look-ahead target", False)

gen.add("linear_lookahead", double_t, 0, "Lookahead distance for controller goal (x,y)", 0.7, 0.0, 1.0)
gen.add("angular_lookahead", double_t, 0, "Lookahead distance for controller goal (theta)", 0.7, 0.0, 3.14)

gen.add("linear_precision", double_t, 0, "Goal position tolerance", 0.2, 0.00, 1)
gen.add("angular_precision", double_t, 0, "Goal orientation tolerance", 0.2, 0.00, 3.14)

gen.add("max_vel_lin", double_t, 0, "Max linear velocity", 0.3, 0.0, 0.6)
gen.add("max_int_lin", double_t, 0, "Linear error integrator saturation", 10.0, 0.0, 50.0)
gen.add("max_acc_lin", double_t, 0, "Max linear acceleration", 3.0, 0.0, 9.8)

gen.add("max_vel_ang", double_t, 0, "Max angular velocity", 0.3, 0.0, 0.5)
gen.add("max_int_ang", double_t, 0, "Angular error integrator saturation", 10.0, 0.0, 50.0)
gen.add("max_acc_ang", double_t, 0, "Max angular acceleration", 3.0, 0.0, 10.0)

gen.add("kp_lin", double_t, 0, "Proportional gain for linear velocity", 2, 0.0, 10.0)
gen.add("ki_lin", double_t, 0, "Integral gain for linear velocity", 0.04, 0.0, 2.0)
gen.add("kd_lin", double_t, 0, "Derivative gain for linear velocity", 0, 0.0, 10.0)

gen.add("kp_ang", double_t, 0, "Proportional gain for angular velocity", 2, 0.0, 10.0)
gen.add("ki_ang", double_t, 0, "Integral gain for linear velocity", 0.0, 0.0, 2.0)
gen.add("kd_ang", double_t, 0, "Derivative gain for linear velocity", 0.0, 0.0, 10.0)

exit(gen.generate(PACKAGE, "pid_controller", "PIDController"))
